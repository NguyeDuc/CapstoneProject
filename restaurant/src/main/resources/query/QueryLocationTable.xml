<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd"
version="1.0">
	<named-native-query name="get.LocationTable">
		<query><![CDATA[
		SELECT lt.location_table_id AS locationId, lt.location_name as locationName, s1.status_value AS locationStatus, 
		t.table_code as tableCode, t.table_name as tableName, t.`max_capacity` as maxCapacity, s2.status_value AS tableStatus
		FROM location_table lt 
		INNER JOIN tables t ON t.location_id = lt.location_table_id
		INNER JOIN statuses s1 ON lt.status_id = s1.status_id
		INNER JOIN statuses s2 ON t.status_id = s2.status_id
		]]></query>
	</named-native-query>
	
	
	<named-native-query name="insert.Order">
		<query><![CDATA[
		INSERT INTO Orders (order_taker_id, table_id, status_id,
			order_code, create_by)
			VALUES(:order_taker_id, :table_id, :status_id, :order_code, :create_by)
		]]></query>
	</named-native-query>
	
<!-- 	<named-native-query name="select.ByDishOrderChef"> -->
<!-- 		<query><![CDATA[ -->
<!-- 		SELECT d.dish_id AS dishId, d.dish_name AS dishName, od.quantity AS quantityOrderDish, od.order_dish_id AS orderDishId,  -->
<!-- 			s1.status_value AS statusOrderDish, op.option_name AS optionName, -->
<!-- 			odo.quantity AS quantityOption, s3.status_value AS statusOption,  -->
<!-- 			o.order_id AS orderId, t.table_name AS tableName, s2.status_value AS statusOrder, o.order_date AS orderDate, o.order_code AS orderCode -->
<!-- 		FROM order_dish od  -->
<!-- 			INNER JOIN dishes d ON d.dish_id = od.dish_id -->
<!-- 			LEFT JOIN order_dish_option  odo ON od.order_dish_id = odo.order_dish_id -->
<!-- 			LEFT JOIN options op ON odo.option_id = op.option_id -->
<!-- 			INNER JOIN orders o ON od.order_id = o.order_id -->
<!-- 			INNER JOIN tables t ON t.table_id = o.table_id -->
<!-- 			INNER JOIN statuses s1 ON od.status_id = s1.status_id -->
<!-- 			INNER JOIN statuses s2 ON o.status_id = s2.status_id -->
<!-- 			LEFT JOIN statuses s3 ON odo.status_id = s3.status_id -->
<!-- 		ORDER BY d.dish_id ASC, o.order_date ASC -->
<!-- 		]]></query> -->
<!-- 	</named-native-query> -->
	
<!-- 	<named-native-query name="select.ByDish"> -->
<!-- 		<query><![CDATA[ -->
<!-- 		SELECT d.dish_id AS dishId, d.dish_name AS dishName, SUM(od.quantity) AS quantityDish -->
<!-- 		FROM order_dish od  -->
<!-- 			INNER JOIN dishes d ON od.dish_id = d.dish_id -->
<!-- 		GROUP BY d.dish_id -->
<!-- 		]]></query> -->
<!-- 	</named-native-query> -->
	
	
<!-- 	<named-native-query name="select.ListTableByDish"> -->
<!-- 		<query><![CDATA[ -->
<!-- 		SELECT od.dish_id AS dishId, od.quantity AS quantityOrderDish, SUM(od.quantity) AS sumQty, od.order_dish_id AS orderDishId, s1.status_value AS statusOrderDish, -->
<!-- 			o.order_id AS orderId, t.table_name AS tableName, s2.status_value AS statusOrder, o.order_date AS orderDate, o.order_code AS orderCode -->
<!-- 		FROM order_dish od  -->
<!-- 			INNER JOIN orders o ON od.order_id = o.order_id -->
<!-- 			INNER JOIN tables t ON t.table_id = o.table_id -->
<!-- 			INNER JOIN statuses s1 ON od.status_id = s1.status_id -->
<!-- 			INNER JOIN statuses s2 ON o.status_id = s2.status_id -->
<!-- 		WHERE od.dish_id = :dishId -->
<!-- 		GROUP BY o.order_id -->
<!-- 		ORDER BY o.order_date ASC -->
<!-- 		]]></query> -->
<!-- 	</named-native-query> -->
	
</entity-mappings>